/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import domain.Kasir;
import domain.Racun;
import domain.StatusRacuna;
import domain.StavkaRacuna;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import logic.Controller;
import model.ModelTabeleStavke;

/**
 *
 * @author Djapac
 */
public class FrmKreiranjeRacuna extends javax.swing.JFrame {

    Kasir kasir;
    Racun r;
    
    /**
     * Creates new form FrmKreiranjeRacuna
     */
    public FrmKreiranjeRacuna() {
        initComponents();
    }

    FrmKreiranjeRacuna(Kasir kasir) {
        initComponents();
        this.kasir = kasir;
        setTitle("Kreiranje računa");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        popuniCBStatusa();
        popuniTabeluStavka();
        lblzap.setText(kasir.getIme() + " " + kasir.getPrezime());
        
        LocalDate trenutnoVreme = LocalDate.now();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
        txtDatum.setText(trenutnoVreme.format(dateFormatter));
        
        txtDatum.setEnabled(false);
        
        
        
        
    }

    FrmKreiranjeRacuna(Racun r) {
        initComponents();
        this.r = r;
        this.kasir = r.getZaposleni();
        setTitle("Kreiranje računa");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        popuniCBStatusa();
        popuniTabeluStavka();
        lblzap.setText(kasir.getIme() + " " + kasir.getPrezime());
        
        
       txtBrojRacuna.setText(r.getBrojRacuna());
       txtBrojRacuna.setEnabled(false);
       
       DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
       String formattedDate = r.getDatum().format(dateFormatter);
       txtDatum.setText(formattedDate);
       
       cbStatusRacuna.setSelectedItem(StatusRacuna.IZMENJEN);
       cbStatusRacuna.setEnabled(false);
       
       txtPoreskaStopa.setText(r.getPoreskaStopa() + "");
       
       btnKreiraj.setEnabled(false);
       btnDodajStavku.setEnabled(false);
       jPanel1.setVisible(false);
       
       
       
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblKasir = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBrojRacuna = new javax.swing.JTextField();
        txtDatum = new javax.swing.JTextField();
        txtPoreskaStopa = new javax.swing.JTextField();
        cbStatusRacuna = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtArtikal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCena = new javax.swing.JTextField();
        txtKolicina = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnKreiraj = new javax.swing.JButton();
        btnDodajStavku = new javax.swing.JButton();
        btnIzadji = new javax.swing.JButton();
        btnIzmeniStavku = new javax.swing.JButton();
        lblzap = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Prijavljen kasir: ");

        jLabel2.setText("Poreska stopa: ");

        jLabel3.setText("Broj računa: ");

        jLabel4.setText("Datum: ");

        jLabel5.setText("Status računa: ");

        cbStatusRacuna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavka računa"));

        jLabel6.setText("Artikal: ");

        jLabel7.setText("Cena: ");

        jLabel8.setText("Količina: ");

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblStavke);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtArtikal, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArtikal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        btnKreiraj.setText("Kreiraj račun");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        btnDodajStavku.setText("Dodaj stavku računa");
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        btnIzadji.setText("Izađi");
        btnIzadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzadjiActionPerformed(evt);
            }
        });

        btnIzmeniStavku.setText("Izmeni stavku računa");
        btnIzmeniStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniStavkuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbStatusRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 371, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPoreskaStopa, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(230, 230, 230)
                                .addComponent(btnKreiraj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblzap, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblKasir, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBrojRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDodajStavku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnIzadji, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnIzmeniStavku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKasir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(lblzap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrojRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbStatusRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPoreskaStopa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKreiraj, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIzmeniStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzadji, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzadjiActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnIzadjiActionPerformed

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed
        // TODO add your handling code here:
        
        String artikal = txtArtikal.getText();
        String cenaStr = txtCena.getText();
        String kolicinaStr = txtKolicina.getText();
        ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
        if(validacijaStavke(artikal, cenaStr, kolicinaStr)){
            
            double cena = Double.parseDouble(cenaStr);
            int kolicina = Integer.parseInt(kolicinaStr);
            
            
            StavkaRacuna stavka = new StavkaRacuna(artikal, cena, kolicina, null);
            mts.popuniStavku(stavka);
            resetujStavke();
        }
        
    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        // TODO add your handling code here:
        String datumStr = txtDatum.getText().trim();
        StatusRacuna statusRacuna = (StatusRacuna) cbStatusRacuna.getSelectedItem();
        String brojRacunaStr = txtBrojRacuna.getText().trim();
        String poreskaStopaStr = txtPoreskaStopa.getText().trim();
        
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
        ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
        List<StavkaRacuna> lista = mts.getLista();
  
        if(validacijaRacuna(datumStr, statusRacuna, brojRacunaStr, poreskaStopaStr)){
            try {
                
                
                LocalDate datum = LocalDate.parse(datumStr, dateFormatter);
                
                int brojRacuna = Integer.parseInt(brojRacunaStr);
                double poreskaStopa = Double.parseDouble(poreskaStopaStr);
                
                Racun racun = new Racun(brojRacunaStr, datum, StatusRacuna.KREIRAN, poreskaStopa, kasir, lista);
                 
                Controller.getInstance().createBill(racun);
                resetujPolja();
                JOptionPane.showMessageDialog(this, "Sistem je sačuvao račun!", "Račun", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Račun već postoji u bazi. Unesite novi", "Greška", JOptionPane.INFORMATION_MESSAGE);
                JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva Račun!", "Greška", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }else{
             JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva račun!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnKreirajActionPerformed

    private void btnIzmeniStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniStavkuActionPerformed
        // TODO add your handling code here:
        String datumStr = txtDatum.getText().trim();
        StatusRacuna statusRacuna = (StatusRacuna) cbStatusRacuna.getSelectedItem();
        String brojRacunaStr = txtBrojRacuna.getText().trim();
        String poreskaStopaStr = txtPoreskaStopa.getText().trim();
        
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
        ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
        //List<StavkaRacuna> lista = mts.getLista();
  
        if(validacijaRacuna2(datumStr, statusRacuna, brojRacunaStr, poreskaStopaStr)){
            try {
                
                
                LocalDate datum = LocalDate.parse(datumStr, dateFormatter);
                
                int brojRacuna = Integer.parseInt(brojRacunaStr);
                double poreskaStopa = Double.parseDouble(poreskaStopaStr);
                
                Racun racun = new Racun(brojRacunaStr, datum, statusRacuna, poreskaStopa, kasir, null);
                racun.setRacunID(r.getRacunID());
                racun.setZaposleni(r.getZaposleni());
                
                //StavkaRacuna stavka = new StavkaRacuna();
                //stavka.setRacun(racun);
                
                //List<StavkaRacuna> listaStavki = Controller.getInstance().findBillItems(stavka);
                //racun.setListaStavki(listaStavki);

                
                new FrmIzmeniStavkuRacuna(racun).setVisible(true);
                
                
                //JOptionPane.showMessageDialog(this, "Sistem je poslao račun za izmenu!", "Račun", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Račun već postoji u bazi. Unesite novi", "Greška", JOptionPane.INFORMATION_MESSAGE);
                JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva Račun!", "Greška", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }else{
             JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva račun!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnIzmeniStavkuActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajStavku;
    private javax.swing.JButton btnIzadji;
    private javax.swing.JButton btnIzmeniStavku;
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JComboBox<Object> cbStatusRacuna;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblKasir;
    private javax.swing.JLabel lblzap;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtArtikal;
    private javax.swing.JTextField txtBrojRacuna;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtKolicina;
    private javax.swing.JTextField txtPoreskaStopa;
    // End of variables declaration//GEN-END:variables

    private void popuniCBStatusa() {
        cbStatusRacuna.removeAllItems();
        
        for(StatusRacuna sr : StatusRacuna.values()){
            cbStatusRacuna.addItem(sr);
            
        }
        cbStatusRacuna.setSelectedItem(StatusRacuna.KREIRAN);
    }
    private void popuniTabeluStavka() {
        ModelTabeleStavke mts = new ModelTabeleStavke();
        tblStavke.setModel(mts);
    }

    private boolean validacijaStavke(String artikal, String cena, String kolicina) {
        boolean uspesno = true;
        
        if(cena.isEmpty()){
           JOptionPane.showMessageDialog(this, "Morate uneti cenu!");
            uspesno = false; 
        }
        
        
        
        if (artikal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti artikal!");
            uspesno = false;
        }
        if (!cena.matches("\\d+(\\.\\d+)?")) {
            JOptionPane.showMessageDialog(this, "Cena nije validan broj!");
            uspesno = false;
            
        int proveraCene = Integer.parseInt(cena);
        if(proveraCene < 0){
            JOptionPane.showMessageDialog(this, "Cena ne može biti negativna!");
            uspesno = false; 
            
        }
}
        if(!kolicina.matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Količuna ne sadrži samo cifre!");
            uspesno = false;
        }
        
        int proveraKolicine  = Integer.parseInt(kolicina);
        if(proveraKolicine < 0){
            JOptionPane.showMessageDialog(this, "Količina ne može biti negativna!");
            uspesno = false; 
            
        }
        
        return uspesno;
        
    }

    private void resetujStavke() {
        txtArtikal.setText("");
        txtCena.setText("");
        txtKolicina.setText("");
        
    }

    private boolean validacijaRacuna(String datum, StatusRacuna statusRacuna, String brojRacuna, String poreskaStopa) {
        
        boolean uspesno = true;
        
        if(!statusRacuna.equals(StatusRacuna.KREIRAN)){
            JOptionPane.showMessageDialog(this, "Status računa nije adekvatan!");
            uspesno = false;
        }
        if(datum.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite datum!");
            uspesno = false;
        }
        if(brojRacuna.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite broj računa!");
            uspesno = false;
        }
        if(poreskaStopa.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite poresku stopu!");
            uspesno = false;
        }
        
        
        return uspesno;
        
    }

    private void resetujPolja() {
        
        txtBrojRacuna.setText("");
        txtDatum.setText("");
        txtPoreskaStopa.setText("");
        cbStatusRacuna.setSelectedItem(StatusRacuna.KREIRAN);
        
        
    }

    private boolean validacijaRacuna2(String datumStr, StatusRacuna statusRacuna, String brojRacunaStr, String poreskaStopaStr) {
        boolean uspesno = true;
        
        if(datumStr.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite datum!");
            uspesno = false;
        }
        if(brojRacunaStr.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite broj računa!");
            uspesno = false;
        }
        if(poreskaStopaStr.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite poresku stopu!");
            uspesno = false;
        }
        
        
        return uspesno;
        
    }
    
}

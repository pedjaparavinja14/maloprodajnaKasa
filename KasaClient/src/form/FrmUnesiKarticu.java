/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import domain.Kartica;
import domain.VrstaKartice;
import javax.swing.JOptionPane;

/**
 *
 * @author Djapac
 */
public class FrmUnesiKarticu extends javax.swing.JFrame {
    Kartica kartica;
    FrmPlatiRacun forma;
    /**
     * Creates new form FrmUnesiKarticu
     */
    public FrmUnesiKarticu() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Unesi karticu");
    }

    FrmUnesiKarticu(Kartica kartica) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Unesi karticu");
        this.kartica = kartica;
        popuniCBVrste();
    }

    FrmUnesiKarticu(FrmPlatiRacun aThis, Kartica kartica) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Unesi karticu");
        this.kartica = kartica;
        popuniCBVrste();
        this.forma = aThis;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbVrstaKartice = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtBrojKartice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDatumIsteka = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPib = new javax.swing.JTextField();
        btnPlati = new javax.swing.JButton();
        btnIzadji = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Vrsta kartice: ");

        cbVrstaKartice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Broj kartice: ");

        jLabel3.setText("Datum isteka: ");

        txtDatumIsteka.setText("/");

        jLabel4.setText("PIB");

        btnPlati.setText("Plati");
        btnPlati.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlatiActionPerformed(evt);
            }
        });

        btnIzadji.setText("Izađi");
        btnIzadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzadjiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnPlati, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(btnIzadji, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtBrojKartice)
                        .addComponent(cbVrstaKartice, 0, 290, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDatumIsteka, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPib, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbVrstaKartice, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrojKartice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumIsteka, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPib, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPlati, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzadji, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzadjiActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnIzadjiActionPerformed

    private void btnPlatiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlatiActionPerformed
        // TODO add your handling code here:
        
        VrstaKartice vk = (VrstaKartice) cbVrstaKartice.getSelectedItem();
        String brojKartice = txtBrojKartice.getText().trim();
        String datumIsteka = txtDatumIsteka.getText().trim();
        String pib = txtPib.getText().trim();
        
        if(validacija(brojKartice, datumIsteka, pib)){
            
          kartica.setBrojKartice(brojKartice);
          kartica.setDatumVazenja(datumIsteka);
          kartica.setPib(pib);
          kartica.setVrstaKartice(vk);
          
          forma.setKartica(kartica);
          
          JOptionPane.showMessageDialog(this, "Sistem je validirao karticu!", "Plaćanje karticom", JOptionPane.INFORMATION_MESSAGE);
          this.dispose();
            
            
            
        }else{
            JOptionPane.showMessageDialog(this, "Sistem ne može da plati karticom!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnPlatiActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzadji;
    private javax.swing.JButton btnPlati;
    private javax.swing.JComboBox<Object> cbVrstaKartice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtBrojKartice;
    private javax.swing.JTextField txtDatumIsteka;
    private javax.swing.JTextField txtPib;
    // End of variables declaration//GEN-END:variables

    private void popuniCBVrste() {
        cbVrstaKartice.removeAllItems();
        
        for(VrstaKartice vk : VrstaKartice.values()){
            cbVrstaKartice.addItem(vk);
            
            
        }
        cbVrstaKartice.setSelectedItem(-1);
        
    }
    
    public Kartica vratiKarticu(){
        return kartica;
    }

    private boolean validacija(String brojKartice, String datumIsteka, String pib) {
        boolean uspesno = true;
        
        
        if(brojKartice.isEmpty()){
            JOptionPane.showMessageDialog(this, "Broj kartice nije unet!");
            uspesno = false; 
        }
        
        if(pib.isEmpty()){
            JOptionPane.showMessageDialog(this, "Pib nije unet!");
            uspesno = false; 
        }
        if(pib.length() != 3){
            JOptionPane.showMessageDialog(this, "Pib mora imati samo 3 cifre!");
            uspesno = false;
        }
        
        if(!pib.matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Pib ne sadrži samo cifre!");
            uspesno = false;
        }
        if(!brojKartice.matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Broj kartice ne sadrži samo cifre!");
            uspesno = false;
        }
        
        if(brojKartice.length() != 16){
            JOptionPane.showMessageDialog(this, "Broj kartice nije u dobrom formatu!");
            uspesno = false; 
        }
        
        if(datumIsteka.isEmpty()){
            JOptionPane.showMessageDialog(this, "Datum isteka kartice je prazan");
            uspesno = false;
        }
        if (!datumIsteka.matches("^(0[1-9]|1[0-2])\\/\\d{2}$")) {
            JOptionPane.showMessageDialog(this, "Datum isteka mora da bude u formatu MM/YY");
            uspesno = false;
        }
        
        
        
        
        return uspesno;
        
    }
}
